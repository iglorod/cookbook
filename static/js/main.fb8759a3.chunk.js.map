{"version":3,"sources":["components/UI/Pagination/Pagination.module.css","components/Authorization/AuthElements/InputElement/InputElement.module.css","components/Authorization/AuthElements/SubmitButton/SubmitButton.module.css","components/Authorization/SignIn/SignIn.module.css","components/Authorization/SignUp/SignUp.module.css","components/UI/Navigation/NavigationBrand/NavigationBrand.module.css","components/UI/Navigation/NavigationLinks/AuthLinks/LogoutButton/LogoutButton.module.css","store/reducers/authorization.js","store/actions/actionTypes.js","store/reducers/recipes.js","utility/axios-instance.js","components/Recipe/RecipeComponents/RecipeName/RecipeName.js","components/Recipe/RecipeComponents/RecipeDescription/RecipeDescription.js","components/Recipe/RecipeComponents/RecipeTimes/RecipeTime/RecipeTime.js","components/Recipe/RecipeComponents/RecipeTimes/RecipeTimes.js","components/Recipe/RecipeComponents/RecipeItemsList/ItemsActions/ItemsAction/ItemsAction.js","components/Recipe/RecipeComponents/RecipeItemsList/ItemsActions/ItemsActions.js","components/Recipe/RecipeComponents/RecipeItemsList/RecipeItem/RecipeItem.js","components/Recipe/RecipeComponents/RecipeItemsList/RecipeItemsList.js","utility/is-url.js","components/Recipe/RecipeComponents/RecipeFile/RecipeFile.js","components/Recipe/RecipeComponents/RecipeAuthor/RecipeAuthor.js","components/Recipe/RecipeComponents/RecipeButton/RecipeButton.js","components/UI/ModalSpinner/ModalSpinner.js","components/UI/ColHOC/ColHOC.js","components/Recipe/RecipeView/RecipeView.js","components/UI/AlertMessage/AlertMessage.js","components/Recipe/RecipeEdit/RecipeEdit.js","components/Recipe/RecipeCreate/RecipeCreate.js","store/actions/recipes.js","components/UI/Pagination/Pagination.js","components/Recipes/RecipesList/RecipeCard/RecipeCard.js","components/Recipes/RecipesList/RecipesList.js","components/Recipes/AllRecipes/AllRecipes.js","components/Recipes/UserRecipes/UserRecipes.js","components/Authorization/AuthElements/InputElement/InputElement.js","components/Authorization/AuthElements/TitleElement/TitleElement.js","components/Authorization/AuthElements/RememberMe/RememberMe.js","components/Authorization/AuthElements/SubmitButton/SubmitButton.js","store/actions/authorization.js","utility/validation.js","components/Authorization/SignIn/SignIn.js","components/Authorization/SignUp/SignUp.js","components/UI/Navigation/NavigationBrand/NavigationBrand.js","components/UI/Navigation/NavigationLinks/NavigationLink/NavigationLink.js","components/UI/Navigation/NavigationLinks/AuthLinks/LogoutButton/LogoutButton.js","components/UI/Navigation/NavigationLinks/AuthLinks/AuthLinks.js","components/UI/Navigation/NavigationLinks/NavigationLinks.js","components/UI/Navigation/Navigation.js","components/Recipes/RecipeVersions/RecipeVersions.js","components/Layout/Layout.js","utility/auto-login.js","App.js","serviceWorker.js","index.js","components/Recipes/RecipesList/RecipeCard/RecipeCard.module.css","assets/images/logo.png","components/Recipe/RecipeComponents/RecipeFile/RecipeFile.module.css","components/UI/ModalSpinner/ModalSpinner.module.css","components/Authorization/AuthElements/TitleElement/TitleElement.module.css","components/UI/Navigation/NavigationLinks/NavigationLink/NavigationLink.module.css"],"names":["module","exports","initialState","id","email","token","expirationTime","errorMessage","authStart","refreshTimerId","loading","saveToLocalStorage","data","localStorage","setItem","clearLocalStorage","clear","reducer","state","action","type","decoded","jwt","decode","userData","exp","remember","undefined","err","response","message","getItem","recipes","fetching","totalRecipesCount","count","instance","axios","create","baseURL","RecipeName","props","readOnly","style","padding","textAlign","name","className","value","onChange","bind","placeholder","RecipeDescription","descriptionData","description","RecipeTime","InputGroup","Prepend","Text","text","FormControl","time","RecipeTimes","prepTime","cookTime","totalTime","ItemsAction","actionClass","onClick","icon","ItemsActions","ListGroup","Item","faPlusCircle","onAdd","faMinusCircle","onRemove","RecipeItem","Badge","pill","variant","number","slice","RecipeItemsList","title","split","shift","toUpperCase","itemActions","items","map","item","index","key","points","isUrl","url","test","RecipeFile","useDropzone","accept","noDrag","multiple","onDrop","acceptedFiles","getRootProps","getInputProps","uploadBtn","Card","Body","classes","cardBody","Img","src","file","URL","createObjectURL","RecipeAuthor","humanDate","Date","date","toLocaleString","authorName","author","versionsLink","versions","to","pathname","recipeId","RecipeButton","spinner","Spinner","as","animation","size","role","aria-hidden","ModalSpinner","spinnerModal","ColHOC","Col","sm","md","children","connect","userId","auth","useState","_id","creatorId","next","prev","ingredients","instructions","image","recipe","setRecipe","setLoading","useEffect","location","get","then","forward","history","push","Container","fluid","Row","AlertMessage","setErrorMessage","savingRecipe","setSavingRecipe","onTextChangeHandler","event","newValue","target","prevRecipe","onAddItemHandler","newItems","onRemoveItemHandler","pop","onChangeItemHandler","newItemValue","clearArray","arr","filter","trim","length","divideArray","divider","newArr","isValid","validateRecipe","recipeData","FormData","Math","floor","getTime","append","formRecipe","patch","catch","error","post","fetchRecipesActionCreator","getRecipesCountActionCreator","getRecipesCountAction","dispatch","fetchRecipesAction","skip","limit","PaginationComp","ceil","recipesCount","step","Pagination","active","activePage","paginationContainer","RecipeCard","original","orignalRecipe","maxHeight","overflow","recipeUrl","Title","recipeName","recipeDescription","recipeAdditionalData","faClock","RecipesList","pagination","paginationHandler","CardDeck","width","xs","rcp","getRecipesCount","loadRecipes","setActivePage","firstFetch","setFirstFetch","InputElement","Form","Group","input","Label","label","Control","onInput","isInvalid","Feedback","helperText","TitleElement","titleBlock","Logo","alt","height","titleText","RememberMe","Check","custom","SubmitButton","startAuth","Button","submitBtn","disabled","errorActionCreator","loginActionCreator","rememberData","signInLocalAction","defaults","headers","common","resetTokenTimer","getState","clearTimeout","delay","timerId","setTimeout","refreshTokenAction","console","log","newTimeoutIdActionCreator","newToken","refreshTokenActionCreator","changeValidationMessage","currMessage","validation","string","validationRules","originalEmail","validationMessage","isRequred","isEmail","minLength","maxLength","shoudBeEqual","onSignIn","rememberMe","user","setRememberMe","config","password","stateInputs","setStateInputs","onInputHandler","inputName","currentValid","newValidationMessage","prevState","inputs","fieldsIsValid","preventDefault","redirectLink","onSignUp","newUser","emailIsCorrect","setEmailIsCorrect","emailTimeoutId","setEmailTimeoutId","emailConfirm","timeoutId","checkEmailIsCorrect","NavigationBrand","Navbar","Brand","brandLink","NavigationLink","navLink","activeClassName","navLinkActive","LogoutButton","logoutBtn","userEmail","logout","faSignOutAlt","faUserPlus","faSignInAlt","NavigationLinks","Collapse","Nav","faPlusSquare","Navigation","collapseOnSelect","expand","bg","fixed","Toggle","aria-controls","loadRecipeVersions","reverse","fetchRecipeVersionsAction","signInByLocalData","refreshTokenAndSignIn","finishLoading","expiresIn","autoLogin","path","component","RecipeCreate","exact","RecipeView","RecipeEdit","SignIn","SignUp","UserRecipes","RecipeVersions","AllRecipes","App","Boolean","window","hostname","match","reducers","combineReducers","authReducer","recipeReducer","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fb8759a3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginationContainer\":\"Pagination_paginationContainer__w8erJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"InputElement_input__1f2zF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"submitBtn\":\"SubmitButton_submitBtn__35DQg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"redirectLink\":\"SignIn_redirectLink__3oBa-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"redirectLink\":\"SignUp_redirectLink__3qJXU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"brandLink\":\"NavigationBrand_brandLink__1mtQg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logoutBtn\":\"LogoutButton_logoutBtn__2uRIc\"};","import jwt from 'jsonwebtoken';\r\n\r\nimport * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    id: null,\r\n    email: null,\r\n    token: null,\r\n    expirationTime: null,\r\n    errorMessage: null,\r\n    authStart: false,\r\n    refreshTimerId: null,\r\n    loading: true,\r\n}\r\n\r\nconst saveToLocalStorage = (data) => {\r\n    localStorage.setItem('id', data.id);\r\n    localStorage.setItem('email', data.email);\r\n    localStorage.setItem('token', data.token);\r\n    localStorage.setItem('expirationTime', data.expirationTime);\r\n}\r\n\r\nconst clearLocalStorage = () => {\r\n    localStorage.clear();\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.AUTH_START: {\r\n            return {\r\n                errorMessage: null,\r\n                authStart: true,\r\n            }\r\n        }\r\n\r\n        case actionTypes.LOGIN: {\r\n            const decoded = jwt.decode(action.token.data);\r\n\r\n            const userData = {\r\n                id: decoded.id,\r\n                email: decoded.email,\r\n                token: action.token.data,\r\n                expirationTime: decoded.exp\r\n            }\r\n\r\n            if (action.remember) saveToLocalStorage(userData);\r\n\r\n            return { ...userData };\r\n        }\r\n\r\n        case actionTypes.LOAD_FINISH: {\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n        }\r\n\r\n        case actionTypes.AUTH_ERROR: {\r\n            if (action.err.response === undefined)\r\n                return {\r\n                    errorMessage: 'Service is unavailable. Please, try later...',\r\n                    authStart: false,\r\n                }\r\n            return {\r\n                errorMessage: action.err.response.data.message,\r\n                authStart: false,\r\n            }\r\n        }\r\n\r\n        case actionTypes.REFRESH_TOKEN: {\r\n            const decoded = jwt.decode(action.token.data);\r\n\r\n            const userData = {\r\n                id: decoded.id,\r\n                email: decoded.email,\r\n                token: action.token.data,\r\n                expirationTime: decoded.exp\r\n            }\r\n\r\n            saveToLocalStorage(userData);\r\n\r\n            return { ...userData };\r\n        }\r\n\r\n        case actionTypes.SIGN_IN_LOCALY: {\r\n            const userData = {\r\n                id: localStorage.getItem('id'),\r\n                email: localStorage.getItem('email'),\r\n                token: localStorage.getItem('token'),\r\n                expirationTime: localStorage.getItem('expirationTime')\r\n            }\r\n\r\n            return {\r\n                ...userData,\r\n                loading: false,\r\n            };\r\n        }\r\n\r\n        case actionTypes.RESET_TIMEOUT_ID: {\r\n            return {\r\n                ...state,\r\n                refreshTimerId: action.id\r\n            };\r\n        }\r\n\r\n        case actionTypes.LOGOUT: {\r\n            clearLocalStorage();\r\n\r\n            return {\r\n                ...initialState,\r\n                loading: false,\r\n            }\r\n        }\r\n\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default reducer;\r\n","//authorization\r\nexport const LOGIN = 'LOGIN';\r\nexport const SIGN_IN_LOCALY = 'SIGN_IN_LOCALY';\r\nexport const LOAD_FINISH = 'LOAD_FINISH';\r\nexport const AUTH_ERROR = 'AUTH_ERROR';\r\nexport const AUTH_START = 'AUTH_START';\r\nexport const REFRESH_TOKEN = 'REFRESH_TOKEN';\r\nexport const RESET_TIMEOUT_ID = 'RESET_TIMEOUT_ID';\r\nexport const LOGOUT = 'LOGOUT';\r\n\r\n//recipes\r\nexport const FETCH_RECIPES = 'FETCH_RECIPES';\r\nexport const GET_RECIPES_COUNT = 'GET_RECIPES_COUNT';\r\nexport const FETCHING_START = 'FETCHING_START';\r\n\r\n","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    recipes: [],\r\n    fetching: false,\r\n    totalRecipesCount: null,\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.FETCHING_START: {\r\n            return {\r\n                ...state,\r\n                fetching: true,\r\n            }\r\n        }\r\n\r\n        case actionTypes.FETCH_RECIPES: {\r\n            return {\r\n                ...state,\r\n                recipes: [...action.recipes],\r\n                fetching: false,\r\n            }\r\n        }\r\n\r\n        case actionTypes.GET_RECIPES_COUNT: {\r\n            return {\r\n                ...state,\r\n                totalRecipesCount: action.count,\r\n            }\r\n        }\r\n\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default reducer;\r\n","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://tranquil-reef-23276.herokuapp.com/'\r\n});\r\n\r\nexport default instance;\r\n","import React from 'react';\r\n\r\nconst RecipeName = (props) => {\r\n    if (props.readOnly) {\r\n        return (\r\n            <div style={{\r\n                padding: '10px 0',\r\n                textAlign: 'center',\r\n            }}>\r\n                <h3>{props.name}</h3>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className={'recipeChunk'}>\r\n            <h4>Recipe Name</h4>\r\n            <input\r\n                className=\"form-control\"\r\n                value={props.name}\r\n                onChange={props.readOnly ? null : props.onChange.bind(this, 'name')}\r\n                placeholder=\"Type your recipe name\"\r\n                readOnly={props.readOnly}\r\n            ></input>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RecipeName;\r\n","import React from 'react';\r\n\r\nconst RecipeDescription = (props) => {\r\n    let descriptionData = (\r\n        <div style={{textAlign: 'justify'}}>{props.description}</div>\r\n    )\r\n    if (!props.readOnly) {\r\n        descriptionData = (\r\n            <textarea\r\n                className=\"form-control\"\r\n                value={props.description}\r\n                onChange={props.onChange.bind(this, 'description')}\r\n                placeholder=\"Write some about your recipe\"\r\n                readOnly={props.readOnly}\r\n            ></textarea>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className={'recipeChunk'}>\r\n            <h4>Description</h4>\r\n            {descriptionData}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RecipeDescription;\r\n","import React from 'react';\r\nimport { InputGroup, FormControl } from 'react-bootstrap';\r\n\r\nconst RecipeTime = (props) => {\r\n    return (\r\n        <>\r\n            <InputGroup.Prepend>\r\n                <InputGroup.Text>{props.text}</InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <FormControl\r\n                value={props.time}\r\n                onChange={props.onChange}\r\n                readOnly={props.readOnly} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RecipeTime;\r\n","import React from 'react';\r\nimport { InputGroup } from 'react-bootstrap';\r\n\r\nimport RecipeTime from './RecipeTime/RecipeTime';\r\n\r\nconst RecipeTimes = (props) => {\r\n    return (\r\n        <div className={'recipeChunk'}>\r\n            <h4>Cooking time (min.)</h4>\r\n            <InputGroup className=\"mb-3\">\r\n                <RecipeTime\r\n                    time={props.prepTime}\r\n                    text={'Prep:'}\r\n                    readOnly={props.readOnly}\r\n                    onChange={props.readOnly ? null : props.onChange.bind(this, 'prepTime')} />\r\n                <RecipeTime\r\n                    time={props.cookTime}\r\n                    text={'Cook:'}\r\n                    readOnly={props.readOnly}\r\n                    onChange={props.readOnly ? null : props.onChange.bind(this, 'cookTime')} />\r\n                <RecipeTime\r\n                    time={props.totalTime}\r\n                    text={'Total:'}\r\n                    readOnly={props.readOnly}\r\n                    onChange={props.readOnly ? null : props.onChange.bind(this, 'totalTime')} />\r\n            </InputGroup>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RecipeTimes;\r\n","import React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst ItemsAction = (props) => {\r\n    return (\r\n        <div\r\n            className={props.actionClass}\r\n            onClick={props.onClick}\r\n        >\r\n            <FontAwesomeIcon icon={props.icon} />\r\n            {props.text}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ItemsAction;\r\n","import React from 'react';\r\nimport { ListGroup } from 'react-bootstrap';\r\nimport { faPlusCircle, faMinusCircle } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport ItemsAction from './ItemsAction/ItemsAction';\r\n\r\nconst ItemsActions = (props) => {\r\n    return (\r\n        <ListGroup.Item>\r\n            <div className={'manageItems'}>\r\n                <ItemsAction\r\n                    actionClass={'addItem'}\r\n                    icon={faPlusCircle}\r\n                    text={' Add one'}\r\n                    onClick={props.onAdd} />\r\n\r\n                <ItemsAction\r\n                    actionClass={'removeItem'}\r\n                    icon={faMinusCircle}\r\n                    text={' Remove one'}\r\n                    onClick={props.onRemove} />\r\n            </div>\r\n        </ListGroup.Item>\r\n    )\r\n}\r\n\r\nexport default ItemsActions;\r\n","import React from 'react';\r\nimport { ListGroup, Badge } from 'react-bootstrap';\r\n\r\nconst RecipeItem = (props) => {\r\n    return (\r\n        <ListGroup.Item className={'list-item'}>\r\n            <Badge pill variant=\"info\">{props.number}</Badge>\r\n            <input\r\n                className=\"form-control\"\r\n                value={props.name}\r\n                onChange={props.onChange}\r\n                placeholder={`Type ${props.type.slice(0, -1)} here`}\r\n                readOnly={props.readOnly}\r\n            ></input>\r\n        </ListGroup.Item>\r\n    )\r\n}\r\n\r\nexport default RecipeItem;\r\n","import React from 'react';\r\nimport { ListGroup } from 'react-bootstrap';\r\n\r\nimport ItemsActions from './ItemsActions/ItemsActions';\r\nimport RecipeItem from './RecipeItem/RecipeItem';\r\n\r\nconst RecipeItemsList = (props) => {\r\n    const title = props.type.split('').shift().toUpperCase() + props.type.slice(1);\r\n\r\n    let itemActions = null;\r\n    if (!props.readOnly) {\r\n        itemActions = (\r\n            <ItemsActions\r\n                onAdd={props.onAdd.bind(this, props.type)}\r\n                onRemove={props.onRemove.bind(this, props.type)} />\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className={'recipeChunk'}>\r\n            <h4>{title}</h4>\r\n            <ListGroup>\r\n                {itemActions}\r\n                {\r\n                    props.items.map((item, index) => {\r\n                        return (\r\n                            <RecipeItem\r\n                                key={index}\r\n                                name={item}\r\n                                number={props.points ? (index + 1) : null}\r\n                                type={props.type}\r\n                                readOnly={props.readOnly}\r\n                                onChange={props.readOnly ? null : props.onChange.bind(this, index, props.type)} />\r\n                        )\r\n                    })\r\n                }\r\n            </ListGroup>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RecipeItemsList;\r\n","export const isUrl = (url) => {\r\n    const reqexp = /https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_\\+.~#?&//=]*)/g;\r\n    return reqexp.test(url);\r\n}\r\n","import React from 'react';\r\nimport { useDropzone } from 'react-dropzone';\r\nimport { Card } from 'react-bootstrap';\r\n\r\nimport { isUrl } from '../../../../utility/is-url';\r\nimport classes from './RecipeFile.module.css';\r\n\r\nconst RecipeFile = (props) => {\r\n    let { getRootProps, getInputProps } = useDropzone({\r\n        accept: 'image/*',\r\n        noDrag: true,\r\n        multiple: false,\r\n        onDrop: acceptedFiles => { props.onChange(acceptedFiles[0]); },\r\n    });\r\n\r\n    let uploadBtn = null;\r\n    if (!props.readOnly) {\r\n        uploadBtn = (\r\n            <Card.Body className={classes.cardBody}>\r\n                <div {...getRootProps()} className={classes.uploadBtn}>\r\n                    <input {...getInputProps()} />\r\n                    <span>Upload image</span>\r\n                </div>\r\n            </Card.Body>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Card>\r\n            {uploadBtn}\r\n            <Card.Img\r\n                variant=\"bottom\"\r\n                src={\r\n                    isUrl(props.file)\r\n                        ? props.file\r\n                        : props.file !== ''\r\n                            ? URL.createObjectURL(props.file)\r\n                            : null\r\n                } />\r\n        </Card >\r\n    )\r\n}\r\n\r\nexport default RecipeFile;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst RecipeAuthor = (props) => {\r\n    const humanDate = new Date(props.date * 1000).toLocaleString();\r\n    const authorName = props.author.split('@')[0];\r\n\r\n    let versionsLink = null;\r\n    if (props.versions) {\r\n        versionsLink = (\r\n            <Link to={{\r\n                pathname: '/recipe-versions',\r\n                state: { recipeId: props.recipeId }\r\n            }\r\n            }>Recipe versions</Link>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className={'authorContainer'}>\r\n            Author: <p className={'author'}>{authorName}</p> | <span className={'creationDate'}>{humanDate}</span>{versionsLink}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RecipeAuthor;\r\n","import React from 'react';\r\nimport { Spinner } from 'react-bootstrap';\r\n\r\nconst RecipeButton = (props) => {\r\n    let spinner = null;\r\n    if (props.loading) {\r\n        spinner = (\r\n            <Spinner\r\n                as=\"span\"\r\n                animation=\"border\"\r\n                size=\"sm\"\r\n                role=\"status\"\r\n                aria-hidden=\"true\"\r\n            />\r\n        )\r\n    }\r\n    return (\r\n        <div\r\n            className={'recipeButton'}\r\n            onClick={props.loading ? null : props.onClick}\r\n        >\r\n            {props.text} {spinner}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RecipeButton;\r\n","import React from 'react';\r\nimport { Spinner } from 'react-bootstrap';\r\n\r\nimport classes from './ModalSpinner.module.css';\r\n\r\nconst ModalSpinner = () => {\r\n    return (\r\n        <div className={classes.spinnerModal}>\r\n            <div className={classes.spinner}>\r\n                <Spinner\r\n                    animation=\"border\"\r\n                    variant={'info'} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ModalSpinner;\r\n","import React from 'react';\r\nimport { Col } from 'react-bootstrap';\r\n\r\nconst ColHOC = (props) => {\r\n    return (\r\n        <>\r\n            <Col sm={1} md={2}></Col>\r\n            <Col sm={10} md={8}>\r\n                {props.children}\r\n            </Col>\r\n            <Col sm={1} md={2}></Col>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ColHOC;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\n\r\nimport axios from '../../../utility/axios-instance';\r\nimport RecipeName from '../RecipeComponents/RecipeName/RecipeName';\r\nimport RecipeDescription from '../RecipeComponents/RecipeDescription/RecipeDescription';\r\nimport RecipeTimes from '../RecipeComponents/RecipeTimes/RecipeTimes';\r\nimport RecipeItemsList from '../RecipeComponents/RecipeItemsList/RecipeItemsList';\r\nimport RecipeFile from '../RecipeComponents/RecipeFile/RecipeFile';\r\nimport RecipeAuthor from '../RecipeComponents/RecipeAuthor/RecipeAuthor';\r\nimport RecipeButton from '../RecipeComponents/RecipeButton/RecipeButton';\r\nimport ModalSpinner from '../../UI/ModalSpinner/ModalSpinner';\r\nimport ColHOC from '../../UI/ColHOC/ColHOC';\r\nimport '../RecipeComponents/RecipeComponents.css';\r\n\r\nconst RecipeView = (props) => {\r\n    const [recipe, setRecipe] = useState({\r\n        _id: null,\r\n        name: '',\r\n        creatorId: null,\r\n        description: '',\r\n        prepTime: '',\r\n        cookTime: '',\r\n        totalTime: '',\r\n        next: null,\r\n        prev: null,\r\n        ingredients: [],\r\n        instructions: [],\r\n        image: '',\r\n        date: null,\r\n    })\r\n\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        const recipeId = props.location.state.recipeId;\r\n\r\n        axios.get('/recipe/' + recipeId)\r\n            .then(recipe => {\r\n                setRecipe({\r\n                    _id: recipe.data._id,\r\n                    name: recipe.data.name,\r\n                    creatorId: recipe.data.creatorId,\r\n                    description: recipe.data.description,\r\n                    prepTime: recipe.data.prepTime,\r\n                    cookTime: recipe.data.cookTime,\r\n                    totalTime: recipe.data.totalTime,\r\n                    next: recipe.data.next,\r\n                    prev: recipe.data.prev,\r\n                    ingredients: [...recipe.data.ingredients],\r\n                    instructions: [...recipe.data.instructions],\r\n                    image: recipe.data.image,\r\n                    date: recipe.data.date,\r\n                })\r\n\r\n                setLoading(false);\r\n            })\r\n    }, [])\r\n\r\n    const forwardToEditing = () => {\r\n        props.history.push({\r\n            pathname: '/edit',\r\n            state: {\r\n                recipeId: recipe._id,\r\n            }\r\n        })\r\n    }\r\n\r\n    if (loading) return <ModalSpinner />;\r\n\r\n    let forward = null;\r\n    if (recipe.creatorId._id === props.userId && !recipe.next) {\r\n        forward = (\r\n            <ColHOC>\r\n                <RecipeButton\r\n                    text={'Share New Recipe Version'}\r\n                    onClick={forwardToEditing} />\r\n            </ColHOC>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Container className={'recipeContainer'} fluid>\r\n            <Row>\r\n                <Col sm={2}></Col>\r\n                <Col sm={8}>\r\n                    <Row className={'recipeArea'}>\r\n                        <ColHOC>\r\n                            <RecipeFile file={recipe.image} readOnly />\r\n                        </ColHOC>\r\n\r\n                        <ColHOC>\r\n                            <RecipeName name={recipe.name} readOnly />\r\n                            <RecipeAuthor\r\n                                author={recipe.creatorId.email}\r\n                                date={recipe.date}\r\n                                recipeId={recipe._id}\r\n                                versions={recipe.next || recipe.prev} />\r\n                        </ColHOC>\r\n\r\n                        <ColHOC>\r\n                            <RecipeDescription description={recipe.description} readOnly />\r\n                        </ColHOC>\r\n\r\n                        <ColHOC>\r\n                            <RecipeTimes\r\n                                prepTime={recipe.prepTime}\r\n                                cookTime={recipe.cookTime}\r\n                                totalTime={recipe.totalTime}\r\n                                readOnly />\r\n                        </ColHOC>\r\n\r\n                        <ColHOC>\r\n                            <RecipeItemsList\r\n                                type={'ingredients'}\r\n                                items={recipe.ingredients}\r\n                                readOnly />\r\n                        </ColHOC>\r\n\r\n                        <ColHOC>\r\n                            <RecipeItemsList\r\n                                type={'instructions'}\r\n                                items={recipe.instructions}\r\n                                points\r\n                                readOnly />\r\n                        </ColHOC>\r\n\r\n                        {forward}\r\n                    </Row>\r\n                </Col>\r\n                <Col sm={2}></Col>\r\n            </Row>\r\n        </Container >\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userId: state.auth.id,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(RecipeView);\r\n","import React from 'react';\r\n\r\nconst AlertMessage = (props) => {\r\n    return (\r\n        props.errorMessage !== null\r\n            ? <div className=\"alert alert-danger\" role=\"alert\">{props.errorMessage}</div>\r\n            : null\r\n    )\r\n}\r\n\r\nexport default AlertMessage;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport axios from '../../../utility/axios-instance';\r\nimport RecipeName from '../RecipeComponents/RecipeName/RecipeName';\r\nimport RecipeDescription from '../RecipeComponents/RecipeDescription/RecipeDescription';\r\nimport RecipeTimes from '../RecipeComponents/RecipeTimes/RecipeTimes';\r\nimport RecipeItemsList from '../RecipeComponents/RecipeItemsList/RecipeItemsList';\r\nimport RecipeFile from '../RecipeComponents/RecipeFile/RecipeFile';\r\nimport AlertMessage from '../../UI/AlertMessage/AlertMessage';\r\nimport RecipeButton from '../RecipeComponents/RecipeButton/RecipeButton';\r\nimport RecipeAuthor from '../RecipeComponents/RecipeAuthor/RecipeAuthor';\r\nimport { isUrl } from '../../../utility/is-url';\r\nimport ModalSpinner from '../../UI/ModalSpinner/ModalSpinner';\r\nimport ColHOC from '../../UI/ColHOC/ColHOC';\r\nimport '../RecipeComponents/RecipeComponents.css';\r\n\r\nconst RecipeEdit = (props) => {\r\n    const [recipe, setRecipe] = useState({\r\n        _id: null,\r\n        name: '',\r\n        creatorId: null,\r\n        description: '',\r\n        prepTime: '',\r\n        cookTime: '',\r\n        totalTime: '',\r\n        next: null,\r\n        prev: null,\r\n        ingredients: [],\r\n        instructions: [],\r\n        image: '',\r\n        date: null,\r\n    })\r\n\r\n    const [errorMessage, setErrorMessage] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n    const [savingRecipe, setSavingRecipe] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const recipeId = props.location.state.recipeId;\r\n\r\n        axios.get('/recipe/' + recipeId)\r\n            .then(recipe => {\r\n                setRecipe({\r\n                    _id: recipe.data._id,\r\n                    name: recipe.data.name,\r\n                    creatorId: recipe.data.creatorId,\r\n                    description: recipe.data.description,\r\n                    prepTime: recipe.data.prepTime,\r\n                    cookTime: recipe.data.cookTime,\r\n                    totalTime: recipe.data.totalTime,\r\n                    next: recipe.data.next,\r\n                    prev: recipe.data.prev,\r\n                    ingredients: [...recipe.data.ingredients],\r\n                    instructions: [...recipe.data.instructions],\r\n                    image: recipe.data.image,\r\n                    date: recipe.data.date,\r\n                })\r\n\r\n                setLoading(false);\r\n            })\r\n    }, [])\r\n\r\n    if (!props.userId) return <Redirect to={'/sign-in'} />\r\n\r\n\r\n    if (loading || props.userId !== recipe.creatorId._id) return <ModalSpinner />;\r\n\r\n    const onTextChangeHandler = (item, event) => {\r\n        const newValue = event.target.value;\r\n        setRecipe(prevRecipe => ({\r\n            ...prevRecipe,\r\n            [item]: newValue,\r\n        }))\r\n    }\r\n\r\n    const onImageChangeHandler = (image) => {\r\n        setRecipe(prevRecipe => ({\r\n            ...prevRecipe,\r\n            image,\r\n        }))\r\n    }\r\n\r\n    const onAddItemHandler = (item) => {\r\n        setRecipe(prevRecipe => {\r\n            const newItems = [...prevRecipe[item]];\r\n            newItems.push('');\r\n\r\n            return {\r\n                ...prevRecipe,\r\n                [item]: [...newItems]\r\n            }\r\n        })\r\n    }\r\n\r\n    const onRemoveItemHandler = (item) => {\r\n        setRecipe(prevRecipe => {\r\n            const newItems = [...prevRecipe[item]];\r\n            newItems.pop();\r\n\r\n            return {\r\n                ...prevRecipe,\r\n                [item]: [...newItems]\r\n            }\r\n        })\r\n    }\r\n\r\n    const onChangeItemHandler = (index, item, event) => {\r\n        const newItemValue = event.target.value;\r\n        setRecipe(prevRecipe => {\r\n            const newItems = [...prevRecipe[item]];\r\n            newItems[index] = newItemValue;\r\n\r\n            return {\r\n                ...prevRecipe,\r\n                [item]: [...newItems],\r\n            }\r\n        })\r\n    }\r\n\r\n    const validateRecipe = () => {\r\n        let isValid = true;\r\n\r\n        for (let key in recipe) {\r\n            if (key === 'image' || key === 'prev' || key === 'next' || key === 'creatorId') continue;\r\n            else if (key === 'ingredients' || key === 'instructions') {\r\n                const arr = clearArray(recipe[key]);\r\n                isValid = arr.length > 0 && isValid;\r\n            } else {\r\n                isValid = recipe[key].length > 0 && isValid;\r\n            }\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n\r\n    const clearArray = (arr) => {\r\n        return arr.filter(item => item.trim().length > 0);\r\n    }\r\n\r\n    const divideArray = (arr, divider) => {\r\n        const newArr = clearArray(arr);\r\n        return newArr.map((item, index) => (index + 1) !== newArr.length ? item + divider : item);\r\n    }\r\n\r\n    const formRecipe = () => {\r\n        let recipeData = new FormData();\r\n\r\n        const date = Math.floor((new Date().getTime() / 1000));\r\n        const divider = '$$divider$$';\r\n\r\n        recipeData.append('prevRecipeId', recipe._id);\r\n        recipeData.append('date', date);\r\n        recipeData.append('name', recipe.name);\r\n        recipeData.append('creatorId', props.userId);\r\n        recipeData.append('description', recipe.description);\r\n        recipeData.append('prepTime', recipe.prepTime);\r\n        recipeData.append('cookTime', recipe.cookTime);\r\n        recipeData.append('totalTime', recipe.totalTime);\r\n        recipeData.append('ingredients', divideArray(recipe.ingredients, divider));\r\n        recipeData.append('instructions', divideArray(recipe.instructions, divider));\r\n        recipeData.append('divider', divider);\r\n\r\n        isUrl(recipe.image)\r\n            ? recipeData.append('image', recipe.image)\r\n            : recipeData.append('image', recipe.image, recipe.image.name);\r\n\r\n        return recipeData;\r\n    }\r\n\r\n    const updateRecipeHandler = () => {\r\n        if (!validateRecipe()) {\r\n            setErrorMessage('Please fill all fields');\r\n            return;\r\n        }\r\n\r\n        setSavingRecipe(true);\r\n        setErrorMessage(null);\r\n\r\n        const recipeData = formRecipe();\r\n\r\n        axios.patch('/recipe', recipeData)\r\n            .then((recipe) => {\r\n                props.history.push({\r\n                    pathname: '/view',\r\n                    state: {\r\n                        recipeId: recipe.data._id,\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                setSavingRecipe(false);\r\n                setErrorMessage('Something went wrong...')\r\n            })\r\n    }\r\n\r\n    return (\r\n        <Container className={'recipeContainer'} fluid>\r\n            <Row>\r\n                <Col sm={2}></Col>\r\n                <Col sm={8}>\r\n                    <Row className={'recipeArea'}>\r\n                        <ColHOC>\r\n                            <h2 className={'recipeCRU'}>Edit Recipe</h2>\r\n                        </ColHOC>\r\n\r\n                        <ColHOC>\r\n                            <RecipeFile\r\n                                file={recipe.image}\r\n                                onChange={onImageChangeHandler} />\r\n                        </ColHOC>\r\n\r\n                        <ColHOC>\r\n                            <RecipeAuthor\r\n                                author={recipe.creatorId.email}\r\n                                date={recipe.date}\r\n                                recipeId={recipe._id}\r\n                                versions={recipe.next || recipe.prev} />\r\n                            <RecipeName\r\n                                name={recipe.name}\r\n                                onChange={onTextChangeHandler} />\r\n                        </ColHOC>\r\n\r\n                        <ColHOC>\r\n                            <RecipeDescription\r\n                                description={recipe.description}\r\n                                onChange={onTextChangeHandler} />\r\n                        </ColHOC>\r\n\r\n                        <ColHOC>\r\n                            <RecipeTimes\r\n                                prepTime={recipe.prepTime}\r\n                                cookTime={recipe.cookTime}\r\n                                totalTime={recipe.totalTime}\r\n                                onChange={onTextChangeHandler} />\r\n                        </ColHOC>\r\n\r\n                        <ColHOC>\r\n                            <RecipeItemsList\r\n                                type={'ingredients'}\r\n                                items={recipe.ingredients}\r\n                                onAdd={onAddItemHandler}\r\n                                onRemove={onRemoveItemHandler}\r\n                                onChange={onChangeItemHandler} />\r\n                        </ColHOC>\r\n\r\n                        <ColHOC>\r\n                            <RecipeItemsList\r\n                                type={'instructions'}\r\n                                items={recipe.instructions}\r\n                                points\r\n                                onAdd={onAddItemHandler}\r\n                                onRemove={onRemoveItemHandler}\r\n                                onChange={onChangeItemHandler} />\r\n                        </ColHOC>\r\n\r\n                        <ColHOC>\r\n                            <AlertMessage errorMessage={errorMessage} />\r\n                        </ColHOC>\r\n\r\n                        <ColHOC>\r\n                            <RecipeButton\r\n                                text={'Update Recipe'}\r\n                                loading={savingRecipe}\r\n                                onClick={updateRecipeHandler} />\r\n                        </ColHOC>\r\n                    </Row>\r\n                </Col>\r\n                <Col sm={2}></Col>\r\n            </Row>\r\n        </Container >\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userId: state.auth.id,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(RecipeEdit);\r\n","import React, { useState } from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport axios from '../../../utility/axios-instance';\r\nimport RecipeName from '../RecipeComponents/RecipeName/RecipeName';\r\nimport RecipeDescription from '../RecipeComponents/RecipeDescription/RecipeDescription';\r\nimport RecipeTimes from '../RecipeComponents/RecipeTimes/RecipeTimes';\r\nimport RecipeItemsList from '../RecipeComponents/RecipeItemsList/RecipeItemsList';\r\nimport RecipeFile from '../RecipeComponents/RecipeFile/RecipeFile';\r\nimport AlertMessage from '../../UI/AlertMessage/AlertMessage';\r\nimport RecipeButton from '../RecipeComponents/RecipeButton/RecipeButton';\r\nimport ColHOC from '../../UI/ColHOC/ColHOC';\r\nimport '../RecipeComponents/RecipeComponents.css';\r\n\r\nconst RecipeCreate = (props) => {\r\n    const [recipe, setRecipe] = useState({\r\n        name: '',\r\n        description: '',\r\n        prepTime: '',\r\n        cookTime: '',\r\n        totalTime: '',\r\n        ingredients: [],\r\n        instructions: [],\r\n        image: '',\r\n    })\r\n\r\n    const [errorMessage, setErrorMessage] = useState(null);\r\n    const [savingRecipe, setSavingRecipe] = useState(false);\r\n\r\n\r\n    if (!props.userId) return <Redirect to={'/sign-in'} />\r\n\r\n\r\n    const onTextChangeHandler = (item, event) => {\r\n        const newValue = event.target.value;\r\n        setRecipe(prevRecipe => ({\r\n            ...prevRecipe,\r\n            [item]: newValue,\r\n        }))\r\n    }\r\n\r\n    const onImageChangeHandler = (image) => {\r\n        setRecipe(prevRecipe => ({\r\n            ...prevRecipe,\r\n            image,\r\n        }))\r\n    }\r\n\r\n    const onAddItemHandler = (item) => {\r\n        setRecipe(prevRecipe => {\r\n            const newItems = [...prevRecipe[item]];\r\n            newItems.push('');\r\n\r\n            return {\r\n                ...prevRecipe,\r\n                [item]: [...newItems]\r\n            }\r\n        })\r\n    }\r\n\r\n    const onRemoveItemHandler = (item) => {\r\n        setRecipe(prevRecipe => {\r\n            const newItems = [...prevRecipe[item]];\r\n            newItems.pop();\r\n\r\n            return {\r\n                ...prevRecipe,\r\n                [item]: [...newItems]\r\n            }\r\n        })\r\n    }\r\n\r\n    const onChangeItemHandler = (index, item, event) => {\r\n        const newItemValue = event.target.value;\r\n        setRecipe(prevRecipe => {\r\n            const newItems = [...prevRecipe[item]];\r\n            newItems[index] = newItemValue;\r\n\r\n            return {\r\n                ...prevRecipe,\r\n                [item]: [...newItems],\r\n            }\r\n        })\r\n    }\r\n\r\n    const validateRecipe = () => {\r\n        let isValid = true;\r\n\r\n        for (let key in recipe) {\r\n            if (key === 'image') isValid = typeof recipe[key] === 'object' && isValid;\r\n            else if (key === 'ingredients' || key === 'instructions') {\r\n                const arr = clearArray(recipe[key]);\r\n                isValid = arr.length > 0 && isValid;\r\n            } else {\r\n                isValid = recipe[key].length > 0 && isValid;\r\n            }\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n\r\n    const clearArray = (arr) => {\r\n        return arr.filter(item => item.trim().length > 0);\r\n    }\r\n\r\n    const divideArray = (arr, divider) => {\r\n        const newArr = clearArray(arr);\r\n        return newArr.map((item, index) => (index + 1) !== newArr.length ? item + divider : item);\r\n    }\r\n\r\n    const formRecipe = () => {\r\n        let recipeData = new FormData();\r\n\r\n        const date = Math.floor((new Date().getTime() / 1000));\r\n        const divider = '$$divider$$';\r\n\r\n        recipeData.append('date', date);\r\n        recipeData.append('name', recipe.name);\r\n        recipeData.append('creatorId', props.userId);\r\n        recipeData.append('description', recipe.description);\r\n        recipeData.append('prepTime', recipe.prepTime);\r\n        recipeData.append('cookTime', recipe.cookTime);\r\n        recipeData.append('totalTime', recipe.totalTime);\r\n        recipeData.append('ingredients', divideArray(recipe.ingredients, divider));\r\n        recipeData.append('instructions', divideArray(recipe.instructions, divider));\r\n        recipeData.append('divider', divider);\r\n        recipeData.append('image', recipe.image, recipe.image.name);\r\n\r\n        return recipeData;\r\n    }\r\n\r\n    const createRecipeHandler = () => {\r\n        if (!validateRecipe()) {\r\n            setErrorMessage('Please fill all fields & upload image');\r\n            return;\r\n        }\r\n\r\n        setSavingRecipe(true);\r\n        setErrorMessage(null);\r\n\r\n        const recipeData = formRecipe();\r\n\r\n        axios.post('/recipe', recipeData)\r\n            .then((recipe) => {\r\n                props.history.push({\r\n                    pathname: '/view',\r\n                    state: {\r\n                        recipeId: recipe.data._id,\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                setSavingRecipe(false);\r\n                setErrorMessage('Something went wrong...')\r\n            })\r\n    }\r\n\r\n    return (\r\n        <Container className={'recipeContainer'} fluid>\r\n            <Row>\r\n                <Col sm={2}></Col>\r\n                <Col sm={8}>\r\n                    <Row className={'recipeArea'}>\r\n                        <ColHOC>\r\n                            <h2 className={'recipeCRU'}>Create Recipe</h2>\r\n                        </ColHOC>\r\n\r\n                        <ColHOC>\r\n                            <RecipeFile\r\n                                file={recipe.image}\r\n                                onChange={onImageChangeHandler} />\r\n                        </ColHOC>\r\n\r\n                        <ColHOC>\r\n                            <RecipeName\r\n                                name={recipe.name}\r\n                                onChange={onTextChangeHandler} />\r\n                        </ColHOC>\r\n\r\n                        <ColHOC>\r\n                            <RecipeDescription\r\n                                description={recipe.description}\r\n                                onChange={onTextChangeHandler} />\r\n                        </ColHOC>\r\n\r\n                        <ColHOC>\r\n                            <RecipeTimes\r\n                                prepTime={recipe.prepTime}\r\n                                cookTime={recipe.cookTime}\r\n                                totalTime={recipe.totalTime}\r\n                                onChange={onTextChangeHandler} />\r\n                        </ColHOC>\r\n\r\n                        <ColHOC>\r\n                            <RecipeItemsList\r\n                                type={'ingredients'}\r\n                                items={recipe.ingredients}\r\n                                onAdd={onAddItemHandler}\r\n                                onRemove={onRemoveItemHandler}\r\n                                onChange={onChangeItemHandler} />\r\n                        </ColHOC>\r\n\r\n                        <ColHOC>\r\n                            <RecipeItemsList\r\n                                type={'instructions'}\r\n                                items={recipe.instructions}\r\n                                points\r\n                                onAdd={onAddItemHandler}\r\n                                onRemove={onRemoveItemHandler}\r\n                                onChange={onChangeItemHandler} />\r\n                        </ColHOC>\r\n\r\n                        <ColHOC>\r\n                            <AlertMessage errorMessage={errorMessage} />\r\n                        </ColHOC>\r\n\r\n                        <ColHOC>\r\n                            <RecipeButton\r\n                                text={'Create Recipe'}\r\n                                loading={savingRecipe}\r\n                                onClick={createRecipeHandler} />\r\n                        </ColHOC>\r\n                    </Row>\r\n                </Col>\r\n                <Col sm={2}></Col>\r\n            </Row>\r\n        </Container >\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userId: state.auth.id,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(RecipeCreate);\r\n","import axios from '../../utility/axios-instance';\r\n\r\nimport * as actionTypes from './actionTypes';\r\n\r\nexport const fetchRecipesActionCreator = (recipes) => {\r\n    return {\r\n        type: actionTypes.FETCH_RECIPES,\r\n        recipes: recipes,\r\n    }\r\n}\r\n\r\nexport const getRecipesCountActionCreator = (count) => {\r\n    return {\r\n        type: actionTypes.GET_RECIPES_COUNT,\r\n        count: count,\r\n    }\r\n}\r\n\r\nexport const startLoadingActionCreator = () => {\r\n    return {\r\n        type: actionTypes.FETCHING_START,\r\n    }\r\n}\r\n\r\nexport const getRecipesCountAction = (userId = null) => {\r\n    return dispatch => {\r\n        axios.post('/recipe/recipes-count', { userId })\r\n            .then(count => {\r\n                dispatch(getRecipesCountActionCreator(count.data));\r\n            })\r\n    }\r\n}\r\n\r\nexport const fetchRecipesAction = (skip, limit, userId = null) => {\r\n    return dispatch => {\r\n        dispatch(startLoadingActionCreator());\r\n        axios.post(`/recipe/list?skip=${skip}&limit=${limit}`, { userId })\r\n            .then(recipes => {\r\n                dispatch(fetchRecipesActionCreator(recipes.data));\r\n            })\r\n    }\r\n}\r\n\r\nexport const fetchRecipeVersionsAction = (recipeId) => {\r\n    return dispatch => {\r\n        dispatch(startLoadingActionCreator());\r\n        axios.get(`recipe/recipe-versions/${recipeId}`)\r\n            .then(recipes => {\r\n                dispatch(fetchRecipesActionCreator(recipes.data.reverse()));\r\n            })\r\n    }\r\n}\r\n\r\n","import React from 'react'\r\nimport { Pagination } from 'react-bootstrap';\r\n\r\nimport classes from './Pagination.module.css';\r\n\r\nconst PaginationComp = (props) => {\r\n    let items = [];\r\n    for (let number = 1; number <= Math.ceil(props.recipesCount / props.step); number++) {\r\n        items.push(\r\n            <Pagination.Item\r\n                key={number}\r\n                active={number === props.activePage}\r\n                onClick={props.onClick.bind(this, number)}>\r\n                {number}\r\n            </Pagination.Item>,\r\n        );\r\n    }\r\n\r\n    if (items.length < 2) return null;\r\n\r\n    return (\r\n        <Pagination size=\"sm\" className={classes.paginationContainer}>\r\n            {items}\r\n        </Pagination>\r\n    )\r\n}\r\n\r\nexport default PaginationComp;\r\n","import React from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faClock } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport classes from './RecipeCard.module.css';\r\n\r\nconst RecipeCard = (props) => {\r\n    return (\r\n        <Card className={props.original ? classes.orignalRecipe : null}>\r\n            <Link to={{\r\n                pathname: '/view',\r\n                state: { recipeId: props.recipe._id }\r\n            }}>\r\n                <div style={{ maxHeight: '150px', overflow: 'hidden' }}>\r\n                    <Card.Img variant=\"top\" src={props.recipe.image} />\r\n                </div>\r\n            </Link>\r\n            <Card.Body>\r\n                <Link\r\n                    to={{\r\n                        pathname: '/view',\r\n                        state: { recipeId: props.recipe._id }\r\n                    }}\r\n                    className={classes.recipeUrl}\r\n                >\r\n                    <Card.Title className={classes.recipeName}>\r\n                        {props.recipe.name}\r\n                    </Card.Title>\r\n                </Link>\r\n                <Card.Text className={classes.recipeDescription}>\r\n                    {props.recipe.description}\r\n                </Card.Text>\r\n                <Card.Body className={classes.recipeAdditionalData}>\r\n                    <div><FontAwesomeIcon icon={faClock} /> {props.recipe.totalTime}</div>\r\n                    {new Date(props.recipe.date * 1000).toLocaleString()}\r\n                </Card.Body>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default RecipeCard;\r\n","import React from 'react';\r\n\r\nimport Pagination from '../../UI/Pagination/Pagination';\r\nimport RecipeCard from './RecipeCard/RecipeCard';\r\nimport { CardDeck, Row, Col } from 'react-bootstrap';\r\nimport './RecipeList.css';\r\n\r\nconst RecipesList = (props) => {\r\n    let pagination = null;\r\n    if (props.pagination) {\r\n        pagination = (\r\n            <Pagination\r\n                recipesCount={props.recipesCount}\r\n                activePage={props.activePage}\r\n                step={props.step}\r\n                onClick={props.paginationHandler} />\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <CardDeck style={{ width: '100%' }}>\r\n                    {\r\n                        props.recipes.map(recipe => {\r\n                            return (\r\n                                <Col xs={12} md={4} key={recipe._id} className={'pb-3'}>\r\n                                    <RecipeCard\r\n                                        recipe={recipe}\r\n                                        original={props.original === recipe._id} />\r\n                                </Col>\r\n                            )\r\n                        })\r\n                    }\r\n                </CardDeck>\r\n            </Row>\r\n            {pagination}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RecipesList;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Container } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { getRecipesCountAction, fetchRecipesAction } from '../../../store/actions/recipes';\r\nimport RecipesList from '../RecipesList/RecipesList';\r\nimport ModalSpinner from '../../UI/ModalSpinner/ModalSpinner';\r\n\r\nconst AllRecipes = (props) => {\r\n    const [activePage, setActivePage] = useState(1);\r\n    const [firstFetch, setFirstFetch] = useState(true);\r\n\r\n    useEffect(() => {\r\n        props.getRecipesCount();\r\n        props.loadRecipes((activePage - 1) * 6, 6);\r\n        \r\n        setFirstFetch(false);\r\n    }, [activePage])\r\n\r\n    const paginationHandler = (number) => {\r\n        setActivePage(number);\r\n    }\r\n\r\n    if (props.fetching || firstFetch) return <ModalSpinner />\r\n\r\n    return (\r\n        <Container>\r\n            <RecipesList\r\n                recipes={props.recipes}\r\n                recipesCount={props.recipesCount}\r\n                pagination\r\n                step={6}\r\n                activePage={activePage}\r\n                paginationHandler={paginationHandler}\r\n            />\r\n        </Container>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userId: state.auth.id,\r\n        recipes: state.rcp.recipes,\r\n        recipesCount: state.rcp.totalRecipesCount,\r\n        fetching: state.rcp.fetching,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getRecipesCount: () => { dispatch(getRecipesCountAction()) },\r\n        loadRecipes: (skip, limit) => { dispatch(fetchRecipesAction(skip, limit)) }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AllRecipes);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Container } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport { getRecipesCountAction, fetchRecipesAction } from '../../../store/actions/recipes';\r\nimport RecipesList from '../RecipesList/RecipesList';\r\nimport ModalSpinner from '../../UI/ModalSpinner/ModalSpinner';\r\n\r\nconst UserRecipes = (props) => {\r\n    const [activePage, setActivePage] = useState(1);\r\n    const [firstFetch, setFirstFetch] = useState(true);\r\n\r\n    useEffect(() => {\r\n        props.getRecipesCount(props.userId);\r\n        props.loadRecipes((activePage - 1) * 6, 6, props.userId);\r\n\r\n        setFirstFetch(false);\r\n    }, [activePage])\r\n\r\n    const paginationHandler = (number) => {\r\n        setActivePage(number);\r\n    }\r\n\r\n    if (!props.userId) return <Redirect to='/sign-in' />;\r\n\r\n    if (props.fetching || firstFetch) return <ModalSpinner />\r\n\r\n    return (\r\n        <Container>\r\n            <RecipesList\r\n                recipes={props.recipes}\r\n                recipesCount={props.recipesCount}\r\n                pagination\r\n                step={6}\r\n                activePage={activePage}\r\n                paginationHandler={paginationHandler}\r\n            />\r\n        </Container>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userId: state.auth.id,\r\n        recipes: state.rcp.recipes,\r\n        recipesCount: state.rcp.totalRecipesCount,\r\n        fetching: state.rcp.fetching,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getRecipesCount: (userId) => { dispatch(getRecipesCountAction(userId)) },\r\n        loadRecipes: (skip, limit, userId) => { dispatch(fetchRecipesAction(skip, limit, userId)) }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserRecipes);\r\n","import React from 'react';\r\nimport { Form } from 'react-bootstrap';\r\n\r\nimport classes from './InputElement.module.css';\r\n\r\nconst InputElement = (props) => {\r\n    return (\r\n        <Form.Group className={classes.input}>\r\n            <Form.Label>{props.label}</Form.Label>\r\n            <Form.Control\r\n                type={props.type}\r\n                placeholder={props.placeholder}\r\n                onChange={props.onInput}\r\n                value={props.value}\r\n                isInvalid={props.error} />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n                {props.helperText}\r\n            </Form.Control.Feedback>\r\n        </Form.Group>\r\n    )\r\n}\r\n\r\nexport default InputElement;\r\n","import React from 'react';\r\nimport Logo from '../../../../assets/images/logo.png';\r\n\r\nimport classes from './TitleElement.module.css';\r\n\r\nconst TitleElement = (props) => {\r\n    return (\r\n        <div className={classes.titleBlock}>\r\n            <div>\r\n                <img src={Logo} alt={'Logo'} height='70' />\r\n            </div>\r\n            <div className={classes.titleText}>{props.children}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TitleElement;\r\n","import React from 'react';\r\nimport { Form } from 'react-bootstrap';\r\n\r\nconst RememberMe = (props) => {\r\n    return (\r\n        <Form.Group>\r\n            <Form.Check\r\n                id={'custom-checkbox'}\r\n                type=\"checkbox\"\r\n                label=\"Remember me\"\r\n                onChange={props.onChange}\r\n                custom />\r\n        </Form.Group>\r\n    )\r\n}\r\n\r\nexport default RememberMe;\r\n","import React from 'react'\r\nimport { Button, Spinner } from 'react-bootstrap';\r\n\r\nimport classes from './SubmitButton.module.css';\r\n\r\nconst SubmitButton = (props) => {\r\n    let spinner = null;\r\n    if (props.startAuth) {\r\n        spinner = (\r\n            <Spinner\r\n                as=\"span\"\r\n                animation=\"border\"\r\n                size=\"sm\"\r\n                role=\"status\"\r\n                aria-hidden=\"true\"\r\n            />\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Button\r\n            variant=\"info\"\r\n            type=\"submit\"\r\n            className={classes.submitBtn}\r\n            onClick={props.onClick}\r\n            disabled={props.startAuth || props.disabled}>\r\n            {props.text} {spinner}\r\n        </Button>\r\n    )\r\n}\r\n\r\nexport default SubmitButton;\r\n","import axios from '../../utility/axios-instance';\r\n\r\nimport * as actionTypes from './actionTypes';\r\n\r\nconst errorActionCreator = (error) => {\r\n    return {\r\n        type: actionTypes.AUTH_ERROR,\r\n        err: error\r\n    }\r\n}\r\n\r\nexport const startActionCreator = () => {\r\n    return {\r\n        type: actionTypes.AUTH_START\r\n    }\r\n}\r\n\r\nexport const finishLoadingActionCreator = () => {\r\n    return {\r\n        type: actionTypes.LOAD_FINISH\r\n    }\r\n}\r\n\r\nexport const loginActionCreator = (token, rememberData) => {\r\n    return {\r\n        type: actionTypes.LOGIN,\r\n        token: token,\r\n        remember: rememberData\r\n    }\r\n}\r\n\r\nexport const signInLocalActionCreator = () => {\r\n    return {\r\n        type: actionTypes.SIGN_IN_LOCALY\r\n    }\r\n}\r\n\r\nexport const refreshTokenActionCreator = (token) => {\r\n    return {\r\n        type: actionTypes.REFRESH_TOKEN,\r\n        token: token\r\n    }\r\n}\r\n\r\nexport const newTimeoutIdActionCreator = (timerId) => {\r\n    return {\r\n        type: actionTypes.RESET_TIMEOUT_ID,\r\n        id: timerId\r\n    }\r\n}\r\n\r\nexport const logoutActionCreator = () => {\r\n    return {\r\n        type: actionTypes.LOGOUT\r\n    }\r\n}\r\n\r\nexport const signInLocalAction = () => {\r\n    return dispatch => {\r\n        axios.defaults.headers.common['Authorization'] = 'Bearer ' + localStorage.getItem('token');\r\n\r\n        dispatch(signInLocalActionCreator())\r\n        dispatch(resetTokenTimer());\r\n    }\r\n}\r\n\r\nexport const signUpAction = (user, rememberData) => {\r\n    return dispatch => {\r\n        dispatch(startActionCreator());\r\n\r\n        axios.post('/user/signup', user)\r\n            .then(token => {\r\n                axios.defaults.headers.common['Authorization'] = 'Bearer ' + token.data;\r\n\r\n                dispatch(loginActionCreator(token, rememberData));\r\n                dispatch(resetTokenTimer());\r\n            })\r\n            .catch(err => {\r\n                dispatch(errorActionCreator(err))\r\n            });\r\n    }\r\n}\r\n\r\nexport const signInAction = (user, rememberData) => {\r\n    return dispatch => {\r\n        dispatch(startActionCreator());\r\n\r\n        axios.post('/user/signin', user)\r\n            .then(token => {\r\n                axios.defaults.headers.common['Authorization'] = 'Bearer ' + token.data;\r\n\r\n                dispatch(loginActionCreator(token, rememberData));\r\n                dispatch(resetTokenTimer());\r\n            })\r\n            .catch(err => {\r\n                dispatch(errorActionCreator(err))\r\n            });\r\n    }\r\n}\r\n\r\nexport const resetTokenTimer = () => { //set token auto-refreshing\r\n    return (dispatch, getState) => {\r\n        clearTimeout(getState().auth.refreshTimerId);\r\n\r\n        let delay = (getState().auth.expirationTime - Math.floor((new Date().getTime() / 1000))) * 1000 - 30 * 1000;\r\n\r\n        if (delay < 0) delay = 15 * 1000;\r\n\r\n        const timerId = setTimeout(\r\n            () => {\r\n                const token = {\r\n                    token: getState().auth.token\r\n                }\r\n\r\n                try {\r\n                    dispatch(refreshTokenAction(token));\r\n                } catch (error) {\r\n                    console.log(error)\r\n                }\r\n            }, delay\r\n        );\r\n        dispatch(newTimeoutIdActionCreator(timerId));\r\n    }\r\n}\r\n\r\nexport const refreshTokenAction = (token) => {\r\n    return (dispatch, getState) => {\r\n        axios.post('/user/refresh-token', token)\r\n            .then(newToken => {\r\n                axios.defaults.headers.common['Authorization'] = 'Bearer ' + newToken.data;\r\n\r\n                dispatch(refreshTokenActionCreator(newToken)); //refreshing token\r\n\r\n                if (!getState().auth.id) dispatch(signInLocalAction()); //if user is not auth we try to login auto\r\n                else dispatch(resetTokenTimer());\r\n            })\r\n            .catch(err => {\r\n                dispatch(errorActionCreator(err));\r\n                dispatch(logoutActionCreator());\r\n            });\r\n    }\r\n}\r\n\r\n","const changeValidationMessage = (isValid, message, currMessage) => {\r\n    if (!isValid && currMessage.length === 0) return message;\r\n    return currMessage;\r\n}\r\n\r\nexport const validation = (string, validationRules, originalEmail) => {\r\n    let isValid = true;\r\n    let validationMessage = '';\r\n\r\n    if (validationRules.isRequred && isValid) {\r\n        isValid = string.length > 0 && isValid;\r\n        validationMessage = changeValidationMessage(isValid, 'Please, fill this field', validationMessage);\r\n    }\r\n\r\n    if (validationRules.isEmail && isValid) {\r\n        const exp = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        isValid = exp.test(string) && isValid;\r\n        validationMessage = changeValidationMessage(isValid, 'Email is incorrect', validationMessage);\r\n    }\r\n\r\n    if (validationRules.minLength && isValid) {\r\n        isValid = string.length > 5 && isValid;\r\n        validationMessage = changeValidationMessage(isValid, 'Min password length is 6 symbols', validationMessage);\r\n    }\r\n\r\n    if (validationRules.maxLength && isValid) {\r\n        isValid = string.length < validationRules.maxLength && isValid;\r\n        validationMessage = changeValidationMessage(isValid, 'Max length is ' + validationRules.maxLength + ' symbols', validationMessage);\r\n    }\r\n\r\n    if (validationRules.shoudBeEqual && isValid) {\r\n        isValid = string === originalEmail && isValid;\r\n        validationMessage = changeValidationMessage(isValid, 'Emails don\\'t match', validationMessage);\r\n    }\r\n\r\n    return [isValid, validationMessage];\r\n}\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { Form, Container, Row, Col } from 'react-bootstrap';\r\n\r\n\r\nimport InputElement from '../AuthElements/InputElement/InputElement';\r\nimport TitleElement from '../AuthElements/TitleElement/TitleElement';\r\nimport RememberMe from '../AuthElements/RememberMe/RememberMe';\r\nimport SubmitButton from '../AuthElements/SubmitButton/SubmitButton';\r\nimport AlertMessage from '../../UI/AlertMessage/AlertMessage';\r\nimport { signInAction } from '../../../store/actions/authorization';\r\nimport { validation } from '../../../utility/validation';\r\nimport classes from './SignIn.module.css';\r\n\r\nconst SignIn = (props) => {\r\n    const [rememberMe, setRememberMe] = useState(false);\r\n\r\n    const [stateInputs, setStateInputs] = useState({\r\n        email: {\r\n            config: {\r\n                label: 'Email address',\r\n                type: 'email',\r\n                placeholder: 'Enter email',\r\n            },\r\n            validationRules: {\r\n                isRequred: true,\r\n                isEmail: true,\r\n            },\r\n            isValid: false,\r\n            validationMessage: '',\r\n            value: '',\r\n        },\r\n        password: {\r\n            config: {\r\n                label: 'Password',\r\n                type: 'password',\r\n                placeholder: 'Type password',\r\n            },\r\n            validationRules: {\r\n                isRequred: true,\r\n                minLength: true,\r\n            },\r\n            isValid: false,\r\n            validationMessage: '',\r\n            value: '',\r\n        },\r\n    });\r\n\r\n\r\n    if (props.email) return <Redirect to='/' />\r\n\r\n    \r\n    const rememberCheckboxHandler = () => {\r\n        setRememberMe(prevState => {\r\n            return !prevState\r\n        })\r\n    }\r\n\r\n    const signInHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        const userData = {\r\n            email: stateInputs.email.value,\r\n            password: stateInputs.password.value\r\n        };\r\n\r\n        props.onSignIn(userData, rememberMe);\r\n    }\r\n\r\n    const onInputHandler = (inputName, event) => {\r\n        const newValue = event.target.value;\r\n        const [currentValid, newValidationMessage] = validation(\r\n            newValue,\r\n            stateInputs[inputName].validationRules,\r\n            stateInputs.email.value\r\n        );\r\n\r\n        setStateInputs(prevState => ({\r\n            ...prevState,\r\n            [inputName]: {\r\n                ...prevState[inputName],\r\n                value: newValue,\r\n                isValid: currentValid,\r\n                validationMessage: newValidationMessage\r\n            }\r\n        }));\r\n    }\r\n\r\n    let inputs = [];\r\n    let fieldsIsValid = true;\r\n\r\n    for (let key in stateInputs) {\r\n        inputs.push(\r\n            <InputElement\r\n                key={key}\r\n                label={stateInputs[key].config.label}\r\n                type={stateInputs[key].config.type}\r\n                placeholder={stateInputs[key].config.placeholder}\r\n                value={stateInputs[key].value}\r\n                onInput={onInputHandler.bind(this, key)}\r\n                error={!stateInputs[key].isValid && stateInputs[key].value.length > 0}\r\n                helperText={stateInputs[key].validationMessage}\r\n            />\r\n        );\r\n\r\n        fieldsIsValid = stateInputs[key].isValid && fieldsIsValid;\r\n    }\r\n\r\n    return (\r\n        <Container fluid>\r\n            <Row>\r\n                <Col sm={1} md={4}></Col>\r\n                <Col sm={10} md={4}>\r\n                    <TitleElement>Sign In</TitleElement>\r\n\r\n                    <Form>\r\n                        {inputs}\r\n\r\n                        <AlertMessage errorMessage={props.errorMessage} />\r\n\r\n                        <RememberMe onChange={rememberCheckboxHandler} />\r\n                        <SubmitButton\r\n                            text={'Sign In'}\r\n                            disabled={!fieldsIsValid}\r\n                            startAuth={props.authStart}\r\n                            onClick={signInHandler} />\r\n\r\n                        <Link to=\"/sign-up\" className={classes.redirectLink}>Don't have an account? Sign Up</Link>\r\n                    </Form>\r\n                </Col>\r\n                <Col sm={1} md={4}></Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        errorMessage: state.auth.errorMessage,\r\n        email: state.auth.email,\r\n        authStart: state.auth.authStart\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onSignIn: (userData, rememberMe) => dispatch(signInAction(userData, rememberMe)),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { Form, Container, Row, Col } from 'react-bootstrap';\r\n\r\nimport axios from '../../../utility/axios-instance';\r\nimport InputElement from '../AuthElements/InputElement/InputElement';\r\nimport TitleElement from '../AuthElements/TitleElement/TitleElement';\r\nimport RememberMe from '../AuthElements/RememberMe/RememberMe';\r\nimport SubmitButton from '../AuthElements/SubmitButton/SubmitButton';\r\nimport AlertMessage from '../../UI/AlertMessage/AlertMessage';\r\nimport { signUpAction } from '../../../store/actions/authorization';\r\nimport { validation } from '../../../utility/validation';\r\nimport classes from './SignUp.module.css';\r\n\r\nconst SignUp = (props) => {\r\n    const [rememberMe, setRememberMe] = useState(false);\r\n\r\n    const [emailIsCorrect, setEmailIsCorrect] = useState(false);\r\n    const [emailTimeoutId, setEmailTimeoutId] = useState(null);\r\n\r\n    const [stateInputs, setStateInputs] = useState({\r\n        email: {\r\n            config: {\r\n                label: 'Email address',\r\n                type: 'email',\r\n                placeholder: 'Enter email',\r\n            },\r\n            validationRules: {\r\n                isRequred: true,\r\n                isEmail: true,\r\n            },\r\n            isValid: false,\r\n            validationMessage: '',\r\n            value: '',\r\n        },\r\n        emailConfirm: {\r\n            config: {\r\n                label: 'Confirm email address',\r\n                type: 'email',\r\n                placeholder: 'Enter email',\r\n            },\r\n            validationRules: {\r\n                isRequred: true,\r\n                shoudBeEqual: true,\r\n            },\r\n            isValid: false,\r\n            validationMessage: '',\r\n            value: '',\r\n        },\r\n        password: {\r\n            config: {\r\n                label: 'Password',\r\n                type: 'password',\r\n                placeholder: 'Type password',\r\n            },\r\n            validationRules: {\r\n                isRequred: true,\r\n                minLength: true,\r\n            },\r\n            isValid: false,\r\n            validationMessage: '',\r\n            value: '',\r\n        },\r\n    });\r\n\r\n    useEffect(() => {\r\n        clearTimeout(emailTimeoutId);\r\n\r\n        if (!emailIsCorrect) return;\r\n\r\n        const timeoutId = setTimeout(() => {\r\n            const data = {\r\n                email: stateInputs.email.value\r\n            }\r\n\r\n            axios.post('/user/email-exists', data)\r\n                .then(response => {\r\n                    if (response.data) {\r\n                        setStateInputs(prevState => ({\r\n                            ...prevState,\r\n                            email: {\r\n                                ...prevState.email,\r\n                                isValid: false,\r\n                                validationMessage: 'Email already exist',\r\n                            }\r\n                        }))\r\n                    }\r\n                })\r\n                .catch(err => console.log(err))\r\n\r\n        }, 800);\r\n        setEmailTimeoutId(timeoutId);\r\n    }, [stateInputs.email.value]);\r\n\r\n\r\n    if (props.email) return <Redirect to='/' />\r\n\r\n\r\n    const rememberCheckboxHandler = () => {\r\n        setRememberMe(prevState => {\r\n            return !prevState\r\n        })\r\n    }\r\n\r\n    const signUpHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        const newUser = {\r\n            email: stateInputs.email.value,\r\n            password: stateInputs.password.value\r\n        };\r\n\r\n        props.onSignUp(newUser, rememberMe);\r\n    }\r\n\r\n    const onInputHandler = (inputName, event) => {\r\n        const newValue = event.target.value;\r\n        const [currentValid, newValidationMessage] = validation(\r\n            newValue,\r\n            stateInputs[inputName].validationRules,\r\n            stateInputs.email.value\r\n        );\r\n\r\n        checkEmailIsCorrect(inputName, currentValid);\r\n\r\n        setStateInputs(prevState => ({\r\n            ...prevState,\r\n            [inputName]: {\r\n                ...prevState[inputName],\r\n                value: newValue,\r\n                isValid: currentValid,\r\n                validationMessage: newValidationMessage\r\n            }\r\n        }));\r\n    }\r\n\r\n    const checkEmailIsCorrect = (inputName, isValid) => {\r\n        if (inputName === 'email') setEmailIsCorrect(isValid);\r\n    }\r\n\r\n    let inputs = [];\r\n    let fieldsIsValid = true;\r\n\r\n    for (let key in stateInputs) {\r\n        inputs.push(\r\n            <InputElement\r\n                key={key}\r\n                label={stateInputs[key].config.label}\r\n                type={stateInputs[key].config.type}\r\n                placeholder={stateInputs[key].config.placeholder}\r\n                value={stateInputs[key].value}\r\n                onInput={onInputHandler.bind(this, key)}\r\n                error={!stateInputs[key].isValid && stateInputs[key].value.length > 0}\r\n                helperText={stateInputs[key].validationMessage}\r\n            />\r\n        );\r\n\r\n        fieldsIsValid = stateInputs[key].isValid && fieldsIsValid;\r\n    }\r\n\r\n    return (\r\n        <Container fluid>\r\n            <Row>\r\n                <Col sm={1} md={4}></Col>\r\n                <Col sm={10} md={4}>\r\n                    <TitleElement>Sign Up</TitleElement>\r\n\r\n                    <Form>\r\n                        {inputs}\r\n\r\n                        <AlertMessage errorMessage={props.errorMessage} />\r\n\r\n                        <RememberMe onChange={rememberCheckboxHandler} />\r\n                        <SubmitButton\r\n                            text={'Sign Up'}\r\n                            disabled={!fieldsIsValid}\r\n                            startAuth={props.authStart}\r\n                            onClick={signUpHandler} />\r\n\r\n                        <Link to=\"/sign-in\" className={classes.redirectLink}>Already have an account? Sign in</Link>\r\n                    </Form>\r\n                </Col>\r\n                <Col sm={1} md={4}></Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        errorMessage: state.auth.errorMessage,\r\n        email: state.auth.email,\r\n        authStart: state.auth.authStart\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onSignUp: (newUser, rememberMe) => dispatch(signUpAction(newUser, rememberMe)),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\r\n","import React from 'react';\r\nimport { Navbar } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Logo from '../../../../assets/images/logo.png';\r\nimport classes from './NavigationBrand.module.css';\r\n\r\nconst NavigationBrand = () => {\r\n    return (\r\n        <Navbar.Brand>\r\n            <Link to=\"/\" className={classes.brandLink}>\r\n                <img\r\n                    alt=\"Logo\"\r\n                    src={Logo}\r\n                    height=\"45\"\r\n                    className=\"d-inline-block align-top\"\r\n                />{' '}\r\n                <div>CookBook</div>\r\n            </Link>\r\n        </Navbar.Brand>\r\n    )\r\n}\r\n\r\nexport default NavigationBrand;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport classes from './NavigationLink.module.css';\r\n\r\nconst NavigationLink = (props) => {\r\n    return (\r\n        <NavLink\r\n            to={props.to}\r\n            className={classes.navLink}\r\n            activeClassName={classes.navLinkActive}\r\n        >\r\n            {props.children}\r\n        </NavLink>\r\n    )\r\n}\r\n\r\nexport default NavigationLink;\r\n","import React from 'react';\r\n\r\nimport classes from './LogoutButton.module.css';\r\n\r\nconst LogoutButton = (props) => {\r\n    return (\r\n        <div\r\n            className={classes.logoutBtn}\r\n            onClick={props.onClick}\r\n        >\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LogoutButton;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faUserPlus, faSignInAlt, faSignOutAlt } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport { logoutActionCreator } from '../../../../../store/actions/authorization';\r\nimport NavigationLink from '../NavigationLink/NavigationLink';\r\nimport LogoutButton from './LogoutButton/LogoutButton';\r\n\r\nexport const AuthLinks = (props) => {\r\n    if (props.userEmail) {\r\n        return (\r\n            <LogoutButton onClick={props.logout}>\r\n                <FontAwesomeIcon icon={faSignOutAlt} /> Logout\r\n            </LogoutButton>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <NavigationLink to=\"/sign-up\"><FontAwesomeIcon icon={faUserPlus} /> Sign Up</NavigationLink>\r\n            <NavigationLink to=\"/sign-in\"><FontAwesomeIcon icon={faSignInAlt} /> Sign In</NavigationLink>\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userEmail: state.auth.email,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        logout: () => { dispatch(logoutActionCreator()) }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AuthLinks);\r\n","import React from 'react';\r\nimport { Navbar, Nav } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlusSquare } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport NavigationLink from './NavigationLink/NavigationLink';\r\nimport AuthLinks from './AuthLinks/AuthLinks'; \r\n\r\nconst NavigationLinks = () => {\r\n    return (\r\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n            <Nav className=\"mr-auto\">\r\n                <NavigationLink to=\"/my-recipes\">My recipes</NavigationLink>\r\n                <NavigationLink to=\"/create\"><FontAwesomeIcon icon={faPlusSquare} /> Create recipe</NavigationLink>\r\n            </Nav>\r\n            <AuthLinks />\r\n        </Navbar.Collapse>\r\n    )\r\n}\r\n\r\nexport default NavigationLinks;\r\n","import React from 'react';\r\nimport { Navbar } from 'react-bootstrap';\r\n\r\nimport NavigationBrand from './NavigationBrand/NavigationBrand';\r\nimport NavigationLinks from './NavigationLinks/NavigationLinks';\r\nimport './Navigation.css';\r\n\r\nconst Navigation = () => {\r\n    return (\r\n        <>\r\n            <Navbar collapseOnSelect className=\"shadow\" expand=\"lg\" bg=\"info\" variant=\"light\" fixed=\"top\">\r\n                <NavigationBrand />\r\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n                <NavigationLinks />\r\n            </Navbar>\r\n            <div className={'empty'}></div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Navigation;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Container } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { fetchRecipeVersionsAction } from '../../../store/actions/recipes';\r\nimport RecipesList from '../RecipesList/RecipesList';\r\nimport ModalSpinner from '../../UI/ModalSpinner/ModalSpinner';\r\n\r\nconst RecipeVersions = (props) => {\r\n    const recipeId = props.location.state.recipeId;\r\n    const [firstFetch, setFirstFetch] = useState(true);\r\n\r\n    useEffect(() => {\r\n        props.loadRecipeVersions(recipeId);\r\n        setFirstFetch(false);\r\n    }, [])\r\n\r\n    if (props.fetching || firstFetch) return <ModalSpinner />\r\n\r\n    return (\r\n        <Container>\r\n            <RecipesList\r\n                original={recipeId}\r\n                recipes={props.recipes}\r\n                recipesCount={props.recipesCount}\r\n            />\r\n        </Container>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userId: state.auth.id,\r\n        recipes: state.rcp.recipes,\r\n        recipesCount: state.rcp.totalRecipesCount,\r\n        fetching: state.rcp.fetching,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        loadRecipeVersions: (recipeId) => { dispatch(fetchRecipeVersionsAction(recipeId)) }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RecipeVersions);\r\n","import React, { useEffect } from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport RecipeView from '../Recipe/RecipeView/RecipeView';\r\nimport RecipeEdit from '../Recipe/RecipeEdit/RecipeEdit';\r\nimport RecipeCreate from '../Recipe/RecipeCreate/RecipeCreate';\r\nimport AllRecipes from '../Recipes/AllRecipes/AllRecipes';\r\nimport UserRecipes from '../Recipes/UserRecipes/UserRecipes';\r\nimport SignIn from '../Authorization/SignIn/SignIn';\r\nimport SignUp from '../Authorization/SignUp/SignUp';\r\nimport Navbar from '../UI/Navigation/Navigation';\r\nimport ModalSpinner from '../UI/ModalSpinner/ModalSpinner';\r\nimport RecipeVersions from '../Recipes/RecipeVersions/RecipeVersions';\r\nimport { autoLogin } from '../../utility/auto-login';\r\nimport { signInLocalAction, refreshTokenAction } from '../../store/actions/authorization';\r\nimport { finishLoadingActionCreator } from '../../store/actions/authorization';\r\n\r\nconst Layout = (props) => {\r\n    useEffect(() => {\r\n        autoLogin(props.refreshTokenAndSignIn, props.signInByLocalData, props.finishLoading);\r\n    }, [])\r\n\r\n    if (props.loading) return  <ModalSpinner />;\r\n\r\n    return (\r\n        <>\r\n            <Navbar />\r\n            <Switch>\r\n                <Route path={'/create'} component={RecipeCreate} exact />\r\n                <Route path={'/view'} component={RecipeView} exact />\r\n                <Route path={'/edit'} component={RecipeEdit} exact />\r\n                <Route path={'/sign-in'} component={SignIn} exact />\r\n                <Route path={'/sign-up'} component={SignUp} exact />\r\n                <Route path={'/my-recipes'} component={UserRecipes} exact />\r\n                <Route path={'/recipe-versions'} component={RecipeVersions} exact />\r\n                <Route path={'/'} component={AllRecipes} />\r\n            </Switch>\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loading: state.auth.loading,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        signInByLocalData: () => { dispatch(signInLocalAction()) },\r\n        refreshTokenAndSignIn: (token) => { dispatch(refreshTokenAction(token)) },\r\n        finishLoading: () => { dispatch(finishLoadingActionCreator()) }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Layout);\r\n","export const autoLogin = (refreshTokenAndSignIn, signInByLocalData, finishLoading) => {\r\n    if (localStorage.getItem('token')) {\r\n        const expiresIn = localStorage.getItem('expirationTime') - 30;\r\n\r\n        if (+Math.floor((new Date().getTime() / 1000)) >= expiresIn) {\r\n            const token = {\r\n                token: localStorage.getItem('token')\r\n            }\r\n\r\n            refreshTokenAndSignIn(token);\r\n        } else {\r\n            signInByLocalData();\r\n        }\r\n    } else finishLoading();\r\n}\r\n","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport Layout from './components/Layout/Layout';\nimport './App.css';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Layout />\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { combineReducers, createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { Provider } from 'react-redux';\n\nimport authReducer from './store/reducers/authorization';\nimport recipeReducer from './store/reducers/recipes';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst reducers = combineReducers({\n  auth: authReducer,\n  rcp: recipeReducer,\n})\n\nconst store = createStore(reducers, applyMiddleware(thunk));\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"recipeUrl\":\"RecipeCard_recipeUrl__294RC\",\"recipeName\":\"RecipeCard_recipeName__22ZdI\",\"recipeDescription\":\"RecipeCard_recipeDescription__M8bZh\",\"recipeAdditionalData\":\"RecipeCard_recipeAdditionalData__1K8rg\",\"orignalRecipe\":\"RecipeCard_orignalRecipe__miagY\"};","module.exports = __webpack_public_path__ + \"static/media/logo.07034b8a.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardBody\":\"RecipeFile_cardBody__3Fhm9\",\"uploadBtn\":\"RecipeFile_uploadBtn__2CZJm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinnerModal\":\"ModalSpinner_spinnerModal__3EyMD\",\"spinner\":\"ModalSpinner_spinner__qxP8v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"titleBlock\":\"TitleElement_titleBlock__1taCF\",\"titleText\":\"TitleElement_titleText__1Nt8i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navLink\":\"NavigationLink_navLink__2p166\",\"navLinkActive\":\"NavigationLink_navLinkActive__2z35W\"};"],"sourceRoot":""}